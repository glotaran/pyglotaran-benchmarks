{"project": "pyglotaran", "project_url": "https://github.com/glotaran/pyglotaran", "show_commit_url": "https://github.com/glotaran/pyglotaran/commit/", "hash_length": 8, "revision_to_hash": {"281": "1c3c5439d437b17101fb361da7e0db94a4e1783a", "456": "d618e88c7bf0608de9b59756cbad85a0f553465b", "459": "9f15660e24a89d0cf0bc96ecefab1fae3d390ec1", "462": "d257dbab727470df01fac4fca6c7a2ad85799e88", "469": "724f69af290f8f4b777599ef0bd2724b11dfe979", "473": "8264ef2cba0ca8503062e91b1f8c328c7ab893d8", "477": "826c412ba1e5ad3b3c1fe15626d0bf66bd146635", "598": "7b7654d3988afba67d2ddb092bfdcf80e447fc95", "600": "632ad4f92bd468510ea43a4ac8f5d1b2fdd707b6", "834": "4aae54ab712d9de5227eea39e54f47142efaf27e", "836": "9c895a1eeb2c479200e114bc0f15d8585c8f5584", "838": "ca5bcd2884ef945b93b56261f4ee5e096edc5b1a", "917": "d6c094133cff0f7c882b2d574a2b23827327492d", "951": "0ab31ad91c6dc64118f0377784469dc65e769ad5", "999": "69b63ddd15dd25dd8fbcd26c6ffa8aab8e92daba", "1022": "73873f01d09a400e57ea8a2b903819fe1fff4efc", "1158": "e9aea7da149ff89f1313246cae995df48dcd4f66", "1194": "ba7fea620b32fa0e69527c38717b12063d3a8b6e", "1219": "5630279168b3f4f3d6eecc22adc24982fd214ae8", "1222": "c0d74d1fbd36f743b44e723650eba16cb6e56664", "1283": "24fcd336d35461b05e707ae72a155f7a7f7d10e2", "1349": "dc00e6da7b0f598dad9dd24ad490e063ddad9115", "1392": "21ba272a3f38c16b7b74b8275b9c7ee83632d2fe", "1446": "d05c042a6e4dffeac556d117f30a7b52f4e2b98f", "1460": "89046e0a95117d63336f5cdb637bf8acf52addb2", "1466": "0cb3b13d4541290b741b661fd7b618bf9bde0041", "1467": "96b42630ee9d0fb90630b0d69aa2b1fdc9724e42", "1538": "6c3c390e0a179c82a1bacf85a445455d1af00cb7", "1647": "9adf4a4913cecf0acbc2ce35c2dfecb5b3530a59", "1690": "535acaaa79e09d8b940b0dee833de48849b18d97", "1861": "1fb14bbc95c5e8844372cd0f846f6bf6befe4ab3", "1879": "d1cd0bc0104ff75e3cfccd0ea6c40ee762c98aa9", "1880": "6a028db313de1092ea9fd5d5f2f950026118edc9"}, "revision_to_date": {"281": 1528190494000, "456": 1533653187000, "459": 1533661714000, "462": 1533663100000, "469": 1533675539000, "473": 1533745021000, "477": 1533830192000, "598": 1542728076000, "600": 1542728460000, "834": 1571946103000, "836": 1572000718000, "838": 1572007433000, "917": 1574166068000, "951": 1574519655000, "999": 1582595767000, "1022": 1592144495000, "1158": 1606869265000, "1194": 1613035241000, "1219": 1614530862000, "1222": 1614535902000, "1283": 1616098997000, "1349": 1624653720000, "1392": 1631047910000, "1446": 1635085838000, "1460": 1638399612000, "1466": 1640984193000, "1467": 1640989093000, "1538": 1654550620000, "1647": 1679951611000, "1690": 1690549195000, "1861": 1701903666000, "1879": 1711263741000, "1880": 1711405185000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz"], "machine": ["gh_action"], "num_cpu": ["2"], "os": ["Linux 5.8.0-1033-azure"], "ram": ["7GB"], "python": ["3.10"], "branch": ["HEAD"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz", "machine": "gh_action", "num_cpu": "2", "os": "Linux 5.8.0-1033-azure", "ram": "7GB", "python": "3.10", "branch": "HEAD"}], "benchmarks": {"IntegrationTwoDatasets.peakmem_optimize": {"code": "class IntegrationTwoDatasets:\n    def peakmem_optimize(self):\n        optimize(self.scheme)\n\n    def setup(self):\n        dataset1 = load_dataset(SCRIPT_DIR / \"data/data1.ascii\")\n        dataset2 = load_dataset(SCRIPT_DIR / \"data/data2.ascii\")\n        parameters = load_parameters(str(SCRIPT_DIR / \"models/parameters.yml\"))\n        addition_kwargs = {}\n        if int(__version__.split(\".\")[1]) < 7:\n            model = load_model(str(SCRIPT_DIR / \"models/model_lt_0.7.0.yml\"))\n            addition_kwargs[\"non_negative_least_squares\"] = True\n        else:\n            model = load_model(str(SCRIPT_DIR / \"models/model.yml\"))\n        self.scheme = Scheme(\n            model,\n            parameters,\n            {\"dataset1\": dataset1, \"dataset2\": dataset2},\n            maximum_number_function_evaluations=11,\n            optimization_method=\"TrustRegionReflection\",\n            **addition_kwargs,\n        )", "name": "IntegrationTwoDatasets.peakmem_optimize", "param_names": [], "params": [], "timeout": 300, "type": "peakmemory", "unit": "bytes", "version": "dd51208102b050544e77980718001a24ff24f8ec7de7a0ae92abdbbba7a45660"}, "IntegrationTwoDatasets.time_optimize": {"code": "class IntegrationTwoDatasets:\n    def time_optimize(self):\n        optimize(self.scheme)\n\n    def setup(self):\n        dataset1 = load_dataset(SCRIPT_DIR / \"data/data1.ascii\")\n        dataset2 = load_dataset(SCRIPT_DIR / \"data/data2.ascii\")\n        parameters = load_parameters(str(SCRIPT_DIR / \"models/parameters.yml\"))\n        addition_kwargs = {}\n        if int(__version__.split(\".\")[1]) < 7:\n            model = load_model(str(SCRIPT_DIR / \"models/model_lt_0.7.0.yml\"))\n            addition_kwargs[\"non_negative_least_squares\"] = True\n        else:\n            model = load_model(str(SCRIPT_DIR / \"models/model.yml\"))\n        self.scheme = Scheme(\n            model,\n            parameters,\n            {\"dataset1\": dataset1, \"dataset2\": dataset2},\n            maximum_number_function_evaluations=11,\n            optimization_method=\"TrustRegionReflection\",\n            **addition_kwargs,\n        )", "min_run_count": 2, "name": "IntegrationTwoDatasets.time_optimize", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300, "type": "time", "unit": "seconds", "version": "8eab061a0b77c818415ddf03d1e998d6aeb84505258f3017b5e40f0f5bec3ca0", "warmup_time": -1}}, "machines": {"gh_action": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz", "machine": "gh_action", "num_cpu": "2", "os": "Linux 5.8.0-1033-azure", "ram": "7GB", "version": 1}}, "tags": {"v0.0.10": 600, "v0.0.3": 456, "v0.0.4": 459, "v0.0.5": 462, "v0.0.6": 469, "v0.0.7": 473, "v0.0.8": 477, "v0.0.9": 598, "v0.2.0": 1158, "v0.3.0": 1194, "v0.3.1": 1219, "v0.3.2": 1222, "v0.3.3": 1283, "v0.4.0": 1349, "v0.4.1": 1392, "v0.4.2": 1466, "v0.5.0": 1460, "v0.5.0rc1": 1446, "v0.5.1": 1467, "v0.6.0": 1538, "v0.7.0": 1647, "v0.7.1": 1690, "v0.7.2": 1861, "0.0.1": 281, "v0.0.11": 834, "v0.0.12": 836, "v0.0.13": 838, "v0.0.14": 917, "v0.0.15": 951, "v0.0.16": 999, "v0.1.0": 1022}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}